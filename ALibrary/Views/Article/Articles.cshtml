@model ALibrary.Models.ArticlesViewModel
@using PagedList.Mvc;
@using ALibrary.Helpers;

<!-- Main content -->
<section class="container">
    <div class="overflow-wrapper">
        <div class="col-sm-8 col-md-9">

            <h2 class="page-heading">@Model.Title</h2>

            @foreach (var article in Model.Articles)
            {
                <!-- News post article-->
                <article class="post post--news">
                    <a href='@Url.RouteUrl("Article", new { slug = article.Slug })' class="post__image-link">
                        <img alt='' src="@Url.Content($"~/Content/images/articles/{article.ArticleImages.First().ImagePath.ToString()}")">
                    </a>

                    <h1><a href="@Url.RouteUrl("Article", new { slug = article.Slug })" class="post__title-link">@article.Title</a></h1>
                    <p class="post__date">@article.Create.ToString("dd.MM.yyyy") </p>

                    <div class="wave-devider"></div>

                    <p class="post__text">@article.Description</p>

                    @if (article.ArticleTags != null && article.ArticleTags.Count > 0)
                    {
                        <div class="tags">
                            <ul>
                                @foreach (var tag in article.ArticleTags)
                                {
                                    <li class="item-wrap"><a href="@Url.RouteUrl("TagArticles", new { tag = tag.Slug })" class="tag_item">@tag.Name</a></li>
                                }
                            </ul>
                        </div>
                    }

                    <div class="devider-huge"></div>
                </article>
                <!-- end news post article-->
            }

            <div class="pagination">
                @if(Model.PageType == PageType.Articles)
                {
                    @Html.PagedListPager(Model.Articles, page => @Url.RouteUrl("ArticlesPage", new { page }))
                }

                @if(Model.PageType == PageType.ArticlesTag)
                {
                    @Html.PagedListPager(Model.Articles, page => @Url.RouteUrl("TagArticlesPage", new { page }))
                }
            </div>

        </div>

        @{Html.RenderAction("Aside", "Main");}
    </div>
</section>
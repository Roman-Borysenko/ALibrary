@model ALibrary.Models.ArticleViewModel

<!-- Main content -->
    <section class="container">
        <div class="col-sm-8 col-md-9">

            <div class="post">
                <div class="post__preview">
                    <div class="swiper-container">
                        <div class="swiper-wrapper">
                            @foreach (var slide in Model.Article.ArticleImages)
                            {
                                <!--Slide-->
                                <div class="swiper-slide" data-text='Slide'>
                                    <img alt='' src="@Url.Content($"~/Content/images/articles/{slide.ImagePath}")">
                                </div>
                            }
                        </div><!-- end swiper wrapper-->
                    </div><!-- end swiper container -->

                    @if (Model.Article.ArticleImages.Count > 1)
                    {
                        <a class="arrow-left no-hover" href="#"><span class="slider__info"></span></a>
                        <a class="arrow-right" href="#"><span class="slider__info"></span></a>
                    }

                </div>

                <h1>@Model.Article.Title</h1>
                <p class="post__date">@Model.Article.Create.ToString("dd.MM.yyyy") </p>

                <div class="wave-devider"></div>

                @Html.Raw(Model.Article.Text)

                <div class="info-wrapper">
                    @if (Model.Article.ArticleTags != null && Model.Article.ArticleTags.Count > 0)
                    {
                        <div class="tags">
                            <ul>
                                @foreach (var tag in Model.Article.ArticleTags)
                                {
                                    <li class="item-wrap"><a href="@Url.RouteUrl("TagArticles", new { tag = tag.Slug })" class="tag_item">@tag.Name</a></li>
                                }
                            </ul>
                        </div>
                    }
                    @*<div class="share">
                    <div class="addthis_toolbox addthis_default_style ">
                        <a class="addthis_button_facebook_like" fb:like:layout="button_count"></a>
                        <a class="addthis_button_tweet"></a>
                        <a class="addthis_button_google_plusone" g:plusone:size="medium"></a>
                    </div>
                </div>*@
                </div>
            </div>

            <h2 class="page-heading">Похожие статьи</h2>

            @foreach (var article in Model.SimilarArticles)
            {
                <div class="col-sm-4 col--remove">
                    <div class="post post--preview">
                        <div class="post__image">
                            <img alt='' src="@Url.Content($"~/Content/images/articles/{article.ArticleImages.First().ImagePath.ToString()}")">
                            @*<div class="social social--position social--hide">
                                <span class="social__name">Share:</span>
                                <a href='#' class="social__variant social--first fa fa-facebook"></a>
                                <a href='#' class="social__variant social--second fa fa-twitter"></a>
                                <a href='#' class="social__variant social--third fa fa-vk"></a>
                            </div>*@
                        </div>
                        <p class="post__date">@article.Create.ToString("dd.MM.yyyy") </p>
                        <a href="@Url.RouteUrl("Article", new { slug = article.Slug })" class="post__title">@article.Title</a>
                        <a href="@Url.RouteUrl("Article", new { slug = article.Slug })" class="btn read-more post--btn">читать</a>
                    </div>
                </div>
            }

            <div class="clearfix"></div>
            <h2 class="page-heading">Комментарии (@Model.Article.Comments.Count)</h2>

            <div class="comment-wrapper">
                @if (User.Identity.IsAuthenticated)
                {
                    using (Html.BeginForm("AddComment", "Article", FormMethod.Post, new { @class = "comment-form" }))
                    {
                        <input name="article" type="hidden" value="@Model.Article.Id" />
                        <textarea class="comment-form__text" name="text" placeholder='Ваш комментарий...'></textarea>
                        <label class="comment-form__info">250 characters left</label>
                        <button type='submit' class="btn btn-md btn--danger comment-form__btn">Добавить комментарий</button>
                    }
                }
                else
                {
                    <p>Для того чтобы оставить комментарий нужно <a href="@Url.Action("Login", "Account")">авторизоваться</a>!</p>
                }

                @if (Model.Article.Comments.Count != 0)
                {
                    <div class="comment-sets">

                        @foreach (var comment in Model.Article.Comments)
                        {
                            <div class="comment">
                                <div class="comment__images">
                                    <img alt='' src="http://placehold.it/50x50">
                                </div>

                                <a href='#' class="comment__author"><span class="social-used fa fa-facebook"></span>@comment.GetUser.UserName</a>
                                <p class="comment__date">@comment.Create.ToString("dd.MM.yyyy | hh:mm")</p>
                                <p class="comment__message">@comment.Text</p>
                                @*<a href='#' class="comment__reply">Reply</a>*@
                            </div>
                        }

                    </div>
                }
            </div>
        </div>




        @{Html.RenderAction("Aside", "Main");}
    </section>